apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'org.robolectric'

android {
    compileSdkVersion 22
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "kr.re.dev.MoogleDic"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"


        /*ndk {
            moduleName "realm-jni"
        }
        sourceSets.main {
            jni.srcDirs = []
            jniLibs.srcDir 'src/main/libs'
        }*/

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }



    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //retro lambda
            //-dontwarn java.lang.invoke.*

            // Realm
            // -keepnames public class * extends io.realm.RealmObject
            // -keep class io.realm.** { *; }
            // -dontwarn javax.**
            //        -dontwarn io.realm.**
        }
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'io.realm:realm-android:0.80.1'
    compile 'io.reactivex:rxandroid:0.24.0'
    compile 'com.google.guava:guava:18.0'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.jjoe64:graphview:4.0.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile 'org.robolectric:robolectric:2.4'


    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:2.0.0'
}


robolectric {
    // Configure includes / excludes
    include '**/*Test.class'
    exclude '**/espresso/**/*.class'

    // Configure max heap size of the test JVM
    maxHeapSize = '2048m'

    // Configure the test JVM arguments - Does not apply to Java 8
    jvmArgs '-XX:MaxPermSize=512m', '-XX:-UseSplitVerifier'

    // Specify max number of processes (default is 1)
    maxParallelForks = 4

    // Specify max number of test classes to execute in a test process
    // before restarting the process (default is unlimited)
    forkEvery = 150

    // configure whether failing tests should fail the build
    ignoreFailures true

    // use afterTest to listen to the test execution results
    afterTest { descriptor, result ->
        println "Executing test for ${descriptor.name} with result: ${result.resultType}"
    }
}
